{"ast":null,"code":"/*!\n  * CoreUI Plugins - Chart.js for CoreUI 4  v3.0.0 (https://coreui.io)\n  * Copyright 2021 creativeLabs Łukasz Holeczek\n  * Licensed under MIT (https://coreui.io/license/)\n  */\n\n/**\n * --------------------------------------------------------------------------\n * Custom Tooltips for Chart.js (v3.0.0): custom-tooltips.js\n * Licensed under MIT (https://coreui.io/plugins/chart.js)\n * --------------------------------------------------------------------------\n */\nconst ClassName = {\n  TOOLTIP: 'chartjs-tooltip',\n  TOOLTIP_BODY: 'chartjs-tooltip-body',\n  TOOLTIP_BODY_ITEM: 'chartjs-tooltip-body-item',\n  TOOLTIP_HEADER: 'chartjs-tooltip-header',\n  TOOLTIP_HEADER_ITEM: 'chartjs-tooltip-header-item'\n};\n\nconst getOrCreateTooltip = chart => {\n  let tooltipEl = chart.canvas.parentNode.querySelector('div');\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement('div');\n    tooltipEl.classList.add(ClassName.TOOLTIP);\n    const table = document.createElement('table');\n    table.style.margin = '0px';\n    tooltipEl.appendChild(table);\n    chart.canvas.parentNode.appendChild(tooltipEl);\n  }\n\n  return tooltipEl;\n};\n\nconst customTooltips = context => {\n  // Tooltip Element\n  const {\n    chart,\n    tooltip\n  } = context;\n  const tooltipEl = getOrCreateTooltip(chart); // Hide if no tooltip\n\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  } // Set Text\n\n\n  if (tooltip.body) {\n    const titleLines = tooltip.title || [];\n    const bodyLines = tooltip.body.map(b => b.lines);\n    const tableHead = document.createElement('thead');\n    tableHead.classList.add(ClassName.TOOLTIP_HEADER);\n    titleLines.forEach(title => {\n      const tr = document.createElement('tr');\n      tr.style.borderWidth = 0;\n      tr.classList.add(ClassName.TOOLTIP_HEADER_ITEM);\n      const th = document.createElement('th');\n      th.style.borderWidth = 0;\n      const text = document.createTextNode(title);\n      th.appendChild(text);\n      tr.appendChild(th);\n      tableHead.appendChild(tr);\n    });\n    const tableBody = document.createElement('tbody');\n    tableBody.classList.add(ClassName.TOOLTIP_BODY);\n    bodyLines.forEach((body, i) => {\n      const colors = tooltip.labelColors[i];\n      const span = document.createElement('span');\n      span.style.background = colors.backgroundColor;\n      span.style.borderColor = colors.borderColor;\n      span.style.borderWidth = '2px';\n      span.style.marginRight = '10px';\n      span.style.height = '10px';\n      span.style.width = '10px';\n      span.style.display = 'inline-block';\n      const tr = document.createElement('tr');\n      tr.classList.add(ClassName.TOOLTIP_BODY_ITEM);\n      const td = document.createElement('td');\n      td.style.borderWidth = 0;\n      const text = document.createTextNode(body);\n      td.appendChild(span);\n      td.appendChild(text);\n      tr.appendChild(td);\n      tableBody.appendChild(tr);\n    });\n    const tableRoot = tooltipEl.querySelector('table'); // Remove old children\n\n    while (tableRoot.firstChild) {\n      tableRoot.firstChild.remove();\n    } // Add new children\n\n\n    tableRoot.appendChild(tableHead);\n    tableRoot.appendChild(tableBody);\n  }\n\n  const {\n    offsetLeft: positionX,\n    offsetTop: positionY\n  } = chart.canvas; // Display, position, and set styles for font\n\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.left = positionX + tooltip.caretX + 'px';\n  tooltipEl.style.top = positionY + tooltip.caretY + 'px';\n  tooltipEl.style.font = tooltip.options.bodyFont.string;\n  tooltipEl.style.padding = tooltip.padding + 'px ' + tooltip.padding + 'px';\n};\n\nexport { customTooltips };","map":{"version":3,"mappings":"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","names":["ClassName","TOOLTIP","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","getOrCreateTooltip","chart","tooltipEl","canvas","parentNode","querySelector","document","createElement","classList","add","table","style","margin","appendChild","customTooltips","context","tooltip","opacity","body","titleLines","title","bodyLines","map","b","lines","tableHead","forEach","tr","borderWidth","th","text","createTextNode","tableBody","i","colors","labelColors","span","background","backgroundColor","borderColor","marginRight","height","width","display","td","tableRoot","firstChild","remove","offsetLeft","positionX","offsetTop","positionY","left","caretX","top","caretY","font","options","bodyFont","string","padding"],"sources":["../../js/src/custom-tooltips.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Custom Tooltips for Chart.js (v3.0.0): custom-tooltips.js\n * Licensed under MIT (https://coreui.io/plugins/chart.js)\n * --------------------------------------------------------------------------\n */\n\nconst ClassName = {\n  TOOLTIP: 'chartjs-tooltip',\n  TOOLTIP_BODY: 'chartjs-tooltip-body',\n  TOOLTIP_BODY_ITEM: 'chartjs-tooltip-body-item',\n  TOOLTIP_HEADER: 'chartjs-tooltip-header',\n  TOOLTIP_HEADER_ITEM: 'chartjs-tooltip-header-item'\n}\n\nconst getOrCreateTooltip = chart => {\n  let tooltipEl = chart.canvas.parentNode.querySelector('div')\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement('div')\n    tooltipEl.classList.add(ClassName.TOOLTIP)\n\n    const table = document.createElement('table')\n    table.style.margin = '0px'\n\n    tooltipEl.appendChild(table)\n    chart.canvas.parentNode.appendChild(tooltipEl)\n  }\n\n  return tooltipEl\n}\n\nconst customTooltips = context => {\n  // Tooltip Element\n  const { chart, tooltip } = context\n  const tooltipEl = getOrCreateTooltip(chart)\n\n  // Hide if no tooltip\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0\n    return\n  }\n\n  // Set Text\n  if (tooltip.body) {\n    const titleLines = tooltip.title || []\n    const bodyLines = tooltip.body.map(b => b.lines)\n\n    const tableHead = document.createElement('thead')\n    tableHead.classList.add(ClassName.TOOLTIP_HEADER)\n\n    titleLines.forEach(title => {\n      const tr = document.createElement('tr')\n      tr.style.borderWidth = 0\n      tr.classList.add(ClassName.TOOLTIP_HEADER_ITEM)\n\n      const th = document.createElement('th')\n      th.style.borderWidth = 0\n      const text = document.createTextNode(title)\n\n      th.appendChild(text)\n      tr.appendChild(th)\n      tableHead.appendChild(tr)\n    })\n\n    const tableBody = document.createElement('tbody')\n    tableBody.classList.add(ClassName.TOOLTIP_BODY)\n\n    bodyLines.forEach((body, i) => {\n      const colors = tooltip.labelColors[i]\n\n      const span = document.createElement('span')\n      span.style.background = colors.backgroundColor\n      span.style.borderColor = colors.borderColor\n      span.style.borderWidth = '2px'\n      span.style.marginRight = '10px'\n      span.style.height = '10px'\n      span.style.width = '10px'\n      span.style.display = 'inline-block'\n\n      const tr = document.createElement('tr')\n      tr.classList.add(ClassName.TOOLTIP_BODY_ITEM)\n\n      const td = document.createElement('td')\n      td.style.borderWidth = 0\n\n      const text = document.createTextNode(body)\n\n      td.appendChild(span)\n      td.appendChild(text)\n      tr.appendChild(td)\n      tableBody.appendChild(tr)\n    })\n\n    const tableRoot = tooltipEl.querySelector('table')\n\n    // Remove old children\n    while (tableRoot.firstChild) {\n      tableRoot.firstChild.remove()\n    }\n\n    // Add new children\n    tableRoot.appendChild(tableHead)\n    tableRoot.appendChild(tableBody)\n  }\n\n  const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas\n\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1\n  tooltipEl.style.left = positionX + tooltip.caretX + 'px'\n  tooltipEl.style.top = positionY + tooltip.caretY + 'px'\n  tooltipEl.style.font = tooltip.options.bodyFont.string\n  tooltipEl.style.padding = tooltip.padding + 'px ' + tooltip.padding + 'px'\n}\n\nexport default customTooltips\n"]},"metadata":{},"sourceType":"module"}