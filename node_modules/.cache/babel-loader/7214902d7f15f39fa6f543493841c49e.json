{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CIcon = _resolveComponent(\"CIcon\");\n\n  const _component_CSidebarBrand = _resolveComponent(\"CSidebarBrand\");\n\n  const _component_AppSidebarNav = _resolveComponent(\"AppSidebarNav\");\n\n  const _component_CSidebarToggler = _resolveComponent(\"CSidebarToggler\");\n\n  const _component_CSidebar = _resolveComponent(\"CSidebar\");\n\n  return _openBlock(), _createBlock(_component_CSidebar, {\n    position: \"fixed\",\n    unfoldable: $setup.sidebarUnfoldable,\n    visible: $setup.sidebarVisible,\n    onVisibleChange: _cache[1] || (_cache[1] = event => _ctx.$store.commit({\n      type: 'updateSidebarVisible',\n      value: event\n    }))\n  }, {\n    default: _withCtx(() => [_createVNode(_component_CSidebarBrand, null, {\n      default: _withCtx(() => [_createVNode(_component_CIcon, {\n        \"custom-class-name\": \"sidebar-brand-full\",\n        icon: $setup.logoNegative,\n        height: 35\n      }, null, 8\n      /* PROPS */\n      , [\"icon\"]), _createVNode(_component_CIcon, {\n        \"custom-class-name\": \"sidebar-brand-narrow\",\n        icon: $setup.sygnet,\n        height: 35\n      }, null, 8\n      /* PROPS */\n      , [\"icon\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_AppSidebarNav), _createVNode(_component_CSidebarToggler, {\n      class: \"d-none d-lg-flex\",\n      onClick: _cache[0] || (_cache[0] = $event => _ctx.$store.commit('toggleUnfoldable'))\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"unfoldable\", \"visible\"]);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;uBACEA,aA6BWC,mBA7BX,EA6BW;IA5BTC,QAAQ,EAAC,OA4BA;IA3BRC,UAAU,EAAEC,wBA2BJ;IA1BRC,OAAO,EAAED,qBA0BD;IAzBRE,eAAc,4BAAUC,SAAkBC,YAAOC,MAAP,CAAa;kCAAA;aAA4DF;IAA5D,CAAb,CAA5B;EAyBN,CA7BX;sBAYE,MAWgB,CAXhBG,aAWgBC,wBAXhB,EAWgB,IAXhB,EAWgB;wBAVd,MAIE,CAJFD,aAIEE,gBAJF,EAIE;QAHA,qBAAkB,oBAGlB;QAFCC,IAAI,EAAET,mBAEP;QADCU,MAAM,EAAE;MACT,CAJF;;MAAA,WAIE,EACFJ,aAIEE,gBAJF,EAIE;QAHA,qBAAkB,sBAGlB;QAFCC,IAAI,EAAET,aAEP;QADCU,MAAM,EAAE;MACT,CAJF;;MAAA,WADE,EAMY;;;;IAAA,CAXhB,CAWgB,EAChBJ,aAAiBK,wBAAjB,CADgB,EAEhBL,aAGEM,0BAHF,EAGE;MAFAC,KAAK,EAAC,kBAEN;MADCC,OAAK,sCAAEV,YAAOC,MAAP,CAAa,kBAAb,CAAF;IACN,CAHF,CAFgB;;;;GAvBlB;;EAAA","names":["_createBlock","_component_CSidebar","position","unfoldable","$setup","visible","onVisibleChange","event","_ctx","commit","_createVNode","_component_CSidebarBrand","_component_CIcon","icon","height","_component_AppSidebarNav","_component_CSidebarToggler","class","onClick"],"sourceRoot":"","sources":["E:\\assessmentCenter\\ac-frontend-reactjs\\src\\components\\AppSidebar.vue"],"sourcesContent":["<template>\n  <CSidebar\n    position=\"fixed\"\n    :unfoldable=\"sidebarUnfoldable\"\n    :visible=\"sidebarVisible\"\n    @visible-change=\"\n      (event) =>\n        $store.commit({\n          type: 'updateSidebarVisible',\n          value: event,\n        })\n    \"\n  >\n    <CSidebarBrand>\n      <CIcon\n        custom-class-name=\"sidebar-brand-full\"\n        :icon=\"logoNegative\"\n        :height=\"35\"\n      />\n      <CIcon\n        custom-class-name=\"sidebar-brand-narrow\"\n        :icon=\"sygnet\"\n        :height=\"35\"\n      />\n    </CSidebarBrand>\n    <AppSidebarNav />\n    <CSidebarToggler\n      class=\"d-none d-lg-flex\"\n      @click=\"$store.commit('toggleUnfoldable')\"\n    />\n  </CSidebar>\n</template>\n\n<script>\nimport { computed } from 'vue'\nimport { useStore } from 'vuex'\nimport { AppSidebarNav } from './AppSidebarNav'\nimport { logoNegative } from '@/assets/brand/logo-negative'\nimport { sygnet } from '@/assets/brand/sygnet'\nexport default {\n  name: 'AppSidebar',\n  components: {\n    AppSidebarNav,\n  },\n  setup() {\n    const store = useStore()\n    return {\n      logoNegative,\n      sygnet,\n      sidebarUnfoldable: computed(() => store.state.sidebarUnfoldable),\n      sidebarVisible: computed(() => store.state.sidebarVisible),\n    }\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}