{"ast":null,"code":"import axios from 'axios';\nimport $ from 'jquery';\nimport { base_url } from '../../../Config.js';\nimport Multiselect from 'vue-multiselect'; // import Select2 from 'vue3-select2-component'\n\nexport default {\n  name: 'Select',\n  components: {\n    Multiselect\n  },\n\n  data() {\n    return {\n      selected: null,\n      options: ['list', 'of', 'options'],\n      category: [],\n      option_no: 1,\n      question: '',\n      question_type: '',\n      question_tag: [],\n      htmlForEditor: ''\n    };\n  },\n\n  Created() {\n    this.login();\n  },\n\n  methods: {\n    async login() {\n      let data = {\n        username: 'Admin',\n        password: '123456789'\n      };\n      await axios.post(`${base_url}/login`, data).then(response => {\n        let token = response.data.token;\n        let userInfo = response.data.user;\n        localStorage.setItem('auth-token', token);\n        localStorage.setItem('user-info', JSON.stringify(userInfo));\n      });\n    },\n\n    async getCategory() {\n      let token = localStorage.getItem('auth-token');\n      var BASE_URL = base_url;\n      var ENDPOINT = 'question-categories';\n      await axios.create({\n        baseURL: BASE_URL,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).get(ENDPOINT).then(res => {\n        console.log(res);\n        this.category = res.data.question_categories;\n      });\n    },\n\n    addNew() {\n      let no = this.option_no + 1;\n      this.option_no = no;\n      $('#options').append(`<div class=\"row mt-2\" :id=\"'del_option-${this.option_no}'\">\n          <div class=\"col-sm-1\">${no}. </div>\n          <div class=\"col-sm-1\">\n            <input type=\"checkbox\" value=\"${this.option_no}\" ref=\"option_${this.option_no}\" />\n          </div>\n          <div class=\"col-sm-10\">\n            <textarea\n              class=\"form-control\"\n             :id=\"'option-${this.option_no}'\"\n            ></textarea>\n          </div>\n        </div>`);\n    },\n\n    delOption() {\n      var option = document.getElementById('options');\n\n      if (this.option_no > 1) {\n        option.removeChild(option.lastChild);\n        this.option_no = this.option_no - 1;\n      }\n    },\n\n    type() {\n      this.question_type = this.$refs.question_type.value;\n    },\n\n    addQuestion() {// let question_type = this.question_type\n      // let question_tag = this.question_tag\n      // let question = this.question\n      // let options = this.option_no\n      // let op = ''\n      //   for (let i = 0; i < options; i++) {\n      //     if(options.length==1){\n      //  op+=\n      //     }\n    }\n\n  },\n\n  mounted() {\n    this.getCategory();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","$","base_url","Multiselect","name","components","data","selected","options","category","option_no","question","question_type","question_tag","htmlForEditor","Created","login","methods","username","password","post","then","response","token","userInfo","user","localStorage","setItem","JSON","stringify","getCategory","getItem","BASE_URL","ENDPOINT","create","baseURL","headers","Accept","Authorization","get","res","console","log","question_categories","addNew","no","append","delOption","option","document","getElementById","removeChild","lastChild","type","$refs","value","addQuestion","mounted"],"sourceRoot":"","sources":["E:\\assessmentCenter\\ac-frontend-reactjs\\src\\views\\buttons\\ButtonGroups.vue"],"sourcesContent":["<template>\n  <!-- <section class=\"content-header\">\n    <div style=\"height: 25px\"></div>\n    <ol class=\"breadcrumb\">\n      <li>\n        <a href=\"#\"><i class=\"fa fa-dashboard\"></i> Home</a>\n      </li>\n      <li style=\"margin-left: 5px\"><a href=\"#\">Question</a></li>\n      <li style=\"margin-left: 5px\" class=\"active\">Add New Question</li>\n    </ol>\n  </section> -->\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">New Question Create</h5>\n      <hr />\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <label>Question Type</label>\n          <!-- <ltiSelect options=\"options\" /> -->\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            placeholder=\"select Type\"\n            ref=\"question_type\"\n            @change=\"type()\"\n          >\n            <option value=\"checkbox\">MCQ (Multiple Answer)</option>\n            <option value=\"radio\">MCQ (Single Answer)</option>\n            <option value=\"truefalse\">True or False</option>\n          </select>\n        </div>\n        <div class=\"col-md-6\">\n          <label>Question Tag</label>\n          <CFormSelect size=\"sm\" class=\"mb-3\" aria-label=\"Small select example\">\n            <option>Open this select menu</option>\n            <option value=\"1\">One</option>\n            <option value=\"2\">Two</option>\n            <option value=\"3\">Three</option>\n          </CFormSelect>\n          <multiselect v-model=\"selected\" options=\"options\"> </multiselect>\n          <select\n            multiple\n            data-coreui-search=\"true\"\n            class=\"form-multi-select\"\n            aria-label=\"Default select example\"\n            v-model=\"question_tag\"\n          >\n            <option :value=\"item.id\" v-for=\"item in category\" :key=\"item.id\">\n              {{ item.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"row mt-2\">\n        <label>Question</label>\n        <div id=\"app\">\n          <vue-editor v-model=\"content\"></vue-editor>\n        </div>\n        <div class=\"p-3\">\n          <VueEditor disabled=\"false\" editorOptions=\"editorSettings\" />\n          <!-- <vue-editor :editorOptions=\"editorSettings\" />\n          <textarea\n            class=\"form-control\"\n            placeholder=\"\"\n            id=\"summernote\"\n            v-model=\"question\"\n          ></textarea> -->\n        </div>\n      </div>\n\n      <div><p>Add options and tick the correct option</p></div>\n      <div id=\"options\">\n        <div class=\"row mt-2\">\n          <div class=\"col-sm-1\">1.</div>\n          <div class=\"col-sm-1\">\n            <input type=\"checkbox\" value=\"option_no\" ref=\"option_1\" />\n          </div>\n          <div class=\"col-sm-10\">\n            <textarea class=\"form-control\" :id=\"'option-1'\"></textarea>\n          </div>\n        </div>\n      </div>\n      <div class=\"mt-3 text-end\">\n        <button @click=\"delOption()\" class=\"btn btn-outline-danger del\">\n          Delete\n        </button>\n        <button @click=\"addNew()\" class=\"btn btn-outline-info\">Add More</button>\n      </div>\n\n      <div class=\"text-center mt-3\">\n        <button class=\"btn btn-outline-success\" @click=\"addQuestion()\">\n          Submit Question\n        </button>\n      </div>\n      <div></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport $ from 'jquery'\nimport { base_url } from '../../../Config.js'\nimport Multiselect from 'vue-multiselect'\n// import Select2 from 'vue3-select2-component'\n\nexport default {\n  name: 'Select',\n  components: {\n    Multiselect,\n  },\n\n  data() {\n    return {\n      selected: null,\n      options: ['list', 'of', 'options'],\n      category: [],\n      option_no: 1,\n      question: '',\n      question_type: '',\n      question_tag: [],\n\n      htmlForEditor: '',\n    }\n  },\n\n  Created() {\n    this.login()\n  },\n  methods: {\n    async login() {\n      let data = {\n        username: 'Admin',\n        password: '123456789',\n      }\n\n      await axios.post(`${base_url}/login`, data).then((response) => {\n        let token = response.data.token\n        let userInfo = response.data.user\n        localStorage.setItem('auth-token', token)\n        localStorage.setItem('user-info', JSON.stringify(userInfo))\n      })\n    },\n    async getCategory() {\n      let token = localStorage.getItem('auth-token')\n      var BASE_URL = base_url\n      var ENDPOINT = 'question-categories'\n      await axios\n        .create({\n          baseURL: BASE_URL,\n          headers: {\n            Accept: 'application/json',\n            Authorization: 'Bearer ' + token,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          console.log(res)\n          this.category = res.data.question_categories\n        })\n    },\n    addNew() {\n      let no = this.option_no + 1\n      this.option_no = no\n      $('#options')\n        .append(`<div class=\"row mt-2\" :id=\"'del_option-${this.option_no}'\">\n          <div class=\"col-sm-1\">${no}. </div>\n          <div class=\"col-sm-1\">\n            <input type=\"checkbox\" value=\"${this.option_no}\" ref=\"option_${this.option_no}\" />\n          </div>\n          <div class=\"col-sm-10\">\n            <textarea\n              class=\"form-control\"\n             :id=\"'option-${this.option_no}'\"\n            ></textarea>\n          </div>\n        </div>`)\n    },\n    delOption() {\n      var option = document.getElementById('options')\n      if (this.option_no > 1) {\n        option.removeChild(option.lastChild)\n        this.option_no = this.option_no - 1\n      }\n    },\n    type() {\n      this.question_type = this.$refs.question_type.value\n    },\n    addQuestion() {\n      // let question_type = this.question_type\n      // let question_tag = this.question_tag\n      // let question = this.question\n      // let options = this.option_no\n      // let op = ''\n      //   for (let i = 0; i < options; i++) {\n      //     if(options.length==1){\n      //  op+=\n      //     }\n    },\n  },\n  mounted() {\n    this.getCategory()\n  },\n}\n</script>\n\n<style scoped>\n.del {\n  margin-right: 10px;\n}\n.qus_tag {\n  height: 50px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}