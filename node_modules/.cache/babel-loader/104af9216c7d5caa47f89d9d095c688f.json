{"ast":null,"code":"import axios from 'axios'; // import $ from 'jquery'\n\nimport { base_url } from '../../../Config.js';\nimport { VueEditor } from 'vue3-editor';\nimport Multiselect from 'vue-multiselect';\nexport default {\n  name: 'ButtonGroups',\n  components: {\n    Multiselect,\n    VueEditor\n  },\n\n  data() {\n    return {\n      token: '',\n      checkbox_num: [],\n      radio_num: null,\n      true_false_option: null,\n      option_text: [null],\n      category: [],\n      option_no: 1,\n      question: '',\n      question_type: '',\n      question_tag: [],\n      multiple_ans: true,\n      single_ans: false,\n      true_false: false,\n      mul_obj: [{\n        no: 1,\n        checkbox_radio: 1,\n        com: 1,\n        model: 'option_text_1'\n      }],\n      serial_no: '',\n      value: null,\n      options: ['Batman', 'Robin', 'Joker']\n    };\n  },\n\n  Created() {\n    this.login(); //this.getCategory()\n  },\n\n  beforeMount() {\n    this.getCategory();\n  },\n\n  methods: {\n    async login() {\n      let data = {\n        username: 'Admin',\n        password: '123456789'\n      };\n      await axios.post(`http://localhost:8002/api/v1/login`, data).then(response => {\n        let token = response.data.token;\n        this.token = token;\n        console.log(token);\n        let userInfo = response.data.user;\n        localStorage.setItem('auth-token', token);\n        localStorage.setItem('user-info', JSON.stringify(userInfo));\n      });\n    },\n\n    async getCategory() {\n      //let token = localStorage.getItem('auth-token')\n      let token = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiMDQ5Y2E2Mjg5YzQxZjM5ZDlmZDI4ZWRkZDc1NmE2MjFkMzYzMTk2YjEyZWRjNzZhY2NkY2Q4MDg2YjYzZDQyZGNhNDUzMzdkZTMwYjYyODgiLCJpYXQiOjE2NTY5MDY5MjQuNzkwMjc0LCJuYmYiOjE2NTY5MDY5MjQuNzkwMjc4LCJleHAiOjE2ODg0NDI5MjQuNzIxMDczLCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.qLYY01g9cQlMmxvgXpZT8yfHYbclMUHUYAFwrUUSlKL6z8k1FwSAgXqLqPQxOaWSSwVFGqbvGEh_PD-sxAebGkgpKtEmHATR-HfRvba2mu6KvU9PTH-uIZvjHBnA6HEkUI19GZFPPgejTPVx5OriQasq0un32vcjHqtYDVwUq2Hmp1bQEK1tB57caoKxIHHpZgfdXpdLDwsGtfyhIH6fCRG5_QuE03qqONkJ8bVRSqS8pXR62zL6nJ5AudVN4op0GQVbu60Cs2o1NeiSX-pGu0i3Dkdh0WWOmd_zxtBYgAnPyA9jxuX4HytzK1v5hoiAKeXNAMbdD9pWFT9C5u8gC3ycV4mG5DforsbMWh3qcQM34F4jeA0CRlr5WAIYbVRvZRL2MjI96XqKlDRU1aoPur9bhscTAB-Ws8rlSqFgyZb62i_PeoSLUG-2BwTI-y5yqrZQW0aLDD3Ku5jfNmGSjDQFELIg4WjchIcN7mk4aXSoDnCMdRB6cylYBTNrxuckKHz_XO2cdFkFl6W7_vm6kTpPrnc0bJgw3UjpjUEyMfwI7Zeiod9SZmMAY8cagJaOpR3ZHrY5oYIZM6njfD_r4QPiuumuLBw5yyzHiDiWLW-6lTg9vIV77jeWCCs_FppNDVANX1WbTQuRszKVqj-FwM3UlVwPGuUr8p_ki7zXH0g';\n      var BASE_URL = 'http://localhost:8002/api/v1';\n      var ENDPOINT = 'question-categories';\n      await axios.create({\n        baseURL: BASE_URL,\n        headers: {\n          Accept: 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).get(ENDPOINT).then(res => {\n        console.log(res);\n        this.category = res.data.question_categories;\n      });\n    },\n\n    addNew() {\n      let no = this.option_no + 1;\n      this.option_no = no;\n      let obj = {\n        no: this.option_no,\n        checkbox_radio: this.option_no,\n        com: this.option_no,\n        model: 'option_text_' + this.option_no\n      };\n      this.mul_obj.push(obj);\n      this.option_text.push(null);\n    },\n\n    delOption() {\n      if (this.mul_obj.length > 1) {\n        this.mul_obj.pop();\n        let no = this.option_no - 1;\n        this.option_no = no;\n        console.log(this.option_no);\n      }\n    },\n\n    type() {\n      this.question_type = this.$refs.question_type.value;\n\n      if (this.$refs.question_type.value == 'checkbox') {\n        this.multiple_ans = true;\n        this.single_ans = false;\n        this.true_false = false;\n      } else if (this.$refs.question_type.value == 'radio') {\n        this.multiple_ans = false;\n        this.single_ans = true;\n        this.true_false = false;\n      } else {\n        this.multiple_ans = false;\n        this.single_ans = false;\n        this.true_false = true;\n      }\n    },\n\n    addQuestion() {\n      let question_type = this.question_type;\n\n      if (question_type == 'checkbox') {\n        let serial_no = '';\n\n        for (let i = 1; i <= this.mul_obj.length; i++) {\n          if (i == 1) {\n            serial_no = serial_no + '' + i;\n          } else {\n            serial_no = serial_no + '|' + i;\n          }\n        }\n\n        console.log(serial_no);\n        let data = {\n          question_type: this.question_type,\n          question_text: this.question_type,\n          option_type: this.question_type,\n          profile_id: 1,\n          category_id: 0,\n          privacy: 0,\n          publish_status: 0,\n          no_of_option: this.option_no,\n          no_of_used: 0,\n          no_of_comments: 0,\n          average_rating: 0,\n          no_of_answer: this.checkbox_num.length,\n          active: 0,\n          serial_no: serial_no,\n          option: this.option_text.join('|'),\n          description: this.question,\n          img: 'img',\n          answer: this.checkbox_num.join(','),\n          reference: 0,\n          tags: this.question_tag.join(',')\n        };\n      }\n    },\n\n    handleImageAdded: function (file, Editor, cursorLocation, resetUploader) {\n      var formData = new FormData();\n      formData.append('image', file);\n      axios({\n        url: `${base_url}/upload`,\n        method: 'POST',\n        data: formData\n      }).then(result => {\n        console.log(result);\n        const base_url = result.data.base_url; // Get url from response\n\n        const image_url = result.data.img_url;\n        const url = base_url + '/' + image_url;\n        Editor.insertEmbed(cursorLocation, 'image', url);\n        resetUploader();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","base_url","VueEditor","Multiselect","name","components","data","token","checkbox_num","radio_num","true_false_option","option_text","category","option_no","question","question_type","question_tag","multiple_ans","single_ans","true_false","mul_obj","no","checkbox_radio","com","model","serial_no","value","options","Created","login","beforeMount","getCategory","methods","username","password","post","then","response","console","log","userInfo","user","localStorage","setItem","JSON","stringify","BASE_URL","ENDPOINT","create","baseURL","headers","Accept","Authorization","get","res","question_categories","addNew","obj","push","delOption","length","pop","type","$refs","addQuestion","i","question_text","option_type","profile_id","category_id","privacy","publish_status","no_of_option","no_of_used","no_of_comments","average_rating","no_of_answer","active","option","join","description","img","answer","reference","tags","handleImageAdded","file","Editor","cursorLocation","resetUploader","formData","FormData","append","url","method","result","image_url","img_url","insertEmbed","catch","err"],"sourceRoot":"","sources":["E:\\assessmentCenter\\ac-frontend-reactjs\\src\\views\\buttons\\ButtonGroups.vue"],"sourcesContent":["<template>\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">New Question Create</h5>\n      <hr />\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <label>Question Type</label>\n          <select\n            class=\"form-select\"\n            aria-label=\"Default select example\"\n            placeholder=\"select Type\"\n            ref=\"question_type\"\n            @change=\"type()\"\n          >\n            <option selected>Select One Type</option>\n            <option value=\"checkbox\">MCQ (Multiple Answer)</option>\n            <option value=\"radio\">MCQ (Single Answer)</option>\n            <option value=\"truefalse\">True or False</option>\n          </select>\n        </div>\n        <div class=\"col-md-6\">\n          <label>Question Tag</label>\n          <select\n            multiple\n            class=\"form-select qus_tag\"\n            aria-label=\"Default select example\"\n            v-model=\"question_tag\"\n          >\n            <option :value=\"item.id\" v-for=\"item in category\" :key=\"item.id\">\n              {{ item.name }}\n            </option>\n          </select>\n        </div>\n      </div>\n\n      <div class=\"row mt-2\">\n        <label>Question</label>\n\n        <div class=\"p-3\">\n          <vue-editor\n            id=\"question\"\n            ref=\"question\"\n            useCustomImageHandler\n            @image-added=\"handleImageAdded\"\n            v-model=\"question\"\n          >\n          </vue-editor>\n        </div>\n      </div>\n\n      <div>\n        <p>\n          <span v-if=\"!true_false\">Add options and </span> Tick the correct\n          option\n        </p>\n      </div>\n\n      <div v-if=\"multiple_ans\" id=\"options_for_multiple_ans\">\n        <div v-for=\"(item, index) in mul_obj\" :key=\"index + 1\">\n          <div class=\"row mt-2\">\n            <div class=\"col-1\">{{ item.no }}.</div>\n            <div class=\"col-1\">\n              <input\n                type=\"checkbox\"\n                :id=\"'option-' + item.no\"\n                :value=\"item.no\"\n                :ref=\"'option_' + item.no\"\n                v-model=\"checkbox_num\"\n              />\n            </div>\n            <div class=\"col-10\">\n              <vue-editor\n                v-bind:id=\"'option_text-' + item.no\"\n                :ref=\"'option_text_' + item.no\"\n                useCustomImageHandler\n                @image-added=\"handleImageAdded\"\n                v-model=\"option_text[index]\"\n              >\n              </vue-editor>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"single_ans\" id=\"options_for_single_ans\">\n        <div v-for=\"(item, index) in mul_obj\" :key=\"index + 1\">\n          <div class=\"row mt-2\">\n            <div class=\"col-1\">{{ item.no }}.</div>\n            <div class=\"col-1\">\n              <input\n                type=\"radio\"\n                :id=\"'option-' + item.no\"\n                :value=\"item.no\"\n                :ref=\"'option-' + item.no\"\n                name=\"single_ans\"\n                v-model=\"radio_num\"\n              />\n            </div>\n            <div class=\"col-10\">\n              <vue-editor\n                :id=\"'option_text-' + item.no\"\n                :ref=\"'option_text_' + item.no\"\n                useCustomImageHandler\n                @image-added=\"handleImageAdded\"\n                v-model=\"option_text[index]\"\n              >\n              </vue-editor>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"true_false\" id=\"options_for_true_false_ans\">\n        <div class=\"row mt-2\">\n          <div class=\"col-1\">1</div>\n          <div class=\"col-1\">\n            <input\n              type=\"radio\"\n              id=\"option-1\"\n              value=\"true\"\n              ref=\"option_1\"\n              name=\"true_false_ans\"\n              v-model=\"true_false_option\"\n            />\n          </div>\n          <div class=\"col-10\">\n            <input type=\"text\" class=\"form-control\" value=\"True\" disabled />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-1\">2.</div>\n          <div class=\"col-1\">\n            <input\n              type=\"radio\"\n              id=\"option-2\"\n              value=\"false\"\n              ref=\"option-2\"\n              name=\"true_false_ans\"\n              v-model=\"true_false_option\"\n            />\n          </div>\n          <div class=\"col-10\">\n            <input type=\"text\" class=\"form-control\" value=\"False\" disabled />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"mt-3 text-end\" v-if=\"!true_false\">\n        <button @click=\"delOption()\" class=\"btn btn-outline-danger del\">\n          Delete\n        </button>\n        <button @click=\"addNew()\" class=\"btn btn-outline-info\">Add More</button>\n      </div>\n\n      <div class=\"mt-3 text-center\">\n        <button class=\"btn btn-outline-success\" @click=\"addQuestion()\">\n          Submit Qustion\n        </button>\n      </div>\n      <multiselect v-model=\"selected\" :multiple=\"true\" :options=\"options\">\n      </multiselect>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n// import $ from 'jquery'\nimport { base_url } from '../../../Config.js'\nimport { VueEditor } from 'vue3-editor'\nimport Multiselect from 'vue-multiselect'\n\nexport default {\n  name: 'ButtonGroups',\n  components: {\n    Multiselect,\n    VueEditor,\n  },\n\n  data() {\n    return {\n      token: '',\n      checkbox_num: [],\n      radio_num: null,\n      true_false_option: null,\n      option_text: [null],\n      category: [],\n      option_no: 1,\n      question: '',\n      question_type: '',\n      question_tag: [],\n      multiple_ans: true,\n      single_ans: false,\n      true_false: false,\n      mul_obj: [\n        {\n          no: 1,\n          checkbox_radio: 1,\n          com: 1,\n          model: 'option_text_1',\n        },\n      ],\n      serial_no: '',\n      value: null,\n      options: ['Batman', 'Robin', 'Joker'],\n    }\n  },\n\n  Created() {\n    this.login()\n    //this.getCategory()\n  },\n  beforeMount() {\n    this.getCategory()\n  },\n  methods: {\n    async login() {\n      let data = {\n        username: 'Admin',\n        password: '123456789',\n      }\n\n      await axios\n        .post(`http://localhost:8002/api/v1/login`, data)\n        .then((response) => {\n          let token = response.data.token\n          this.token = token\n          console.log(token)\n          let userInfo = response.data.user\n          localStorage.setItem('auth-token', token)\n          localStorage.setItem('user-info', JSON.stringify(userInfo))\n        })\n    },\n    async getCategory() {\n      //let token = localStorage.getItem('auth-token')\n      let token =\n        'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIzIiwianRpIjoiMDQ5Y2E2Mjg5YzQxZjM5ZDlmZDI4ZWRkZDc1NmE2MjFkMzYzMTk2YjEyZWRjNzZhY2NkY2Q4MDg2YjYzZDQyZGNhNDUzMzdkZTMwYjYyODgiLCJpYXQiOjE2NTY5MDY5MjQuNzkwMjc0LCJuYmYiOjE2NTY5MDY5MjQuNzkwMjc4LCJleHAiOjE2ODg0NDI5MjQuNzIxMDczLCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.qLYY01g9cQlMmxvgXpZT8yfHYbclMUHUYAFwrUUSlKL6z8k1FwSAgXqLqPQxOaWSSwVFGqbvGEh_PD-sxAebGkgpKtEmHATR-HfRvba2mu6KvU9PTH-uIZvjHBnA6HEkUI19GZFPPgejTPVx5OriQasq0un32vcjHqtYDVwUq2Hmp1bQEK1tB57caoKxIHHpZgfdXpdLDwsGtfyhIH6fCRG5_QuE03qqONkJ8bVRSqS8pXR62zL6nJ5AudVN4op0GQVbu60Cs2o1NeiSX-pGu0i3Dkdh0WWOmd_zxtBYgAnPyA9jxuX4HytzK1v5hoiAKeXNAMbdD9pWFT9C5u8gC3ycV4mG5DforsbMWh3qcQM34F4jeA0CRlr5WAIYbVRvZRL2MjI96XqKlDRU1aoPur9bhscTAB-Ws8rlSqFgyZb62i_PeoSLUG-2BwTI-y5yqrZQW0aLDD3Ku5jfNmGSjDQFELIg4WjchIcN7mk4aXSoDnCMdRB6cylYBTNrxuckKHz_XO2cdFkFl6W7_vm6kTpPrnc0bJgw3UjpjUEyMfwI7Zeiod9SZmMAY8cagJaOpR3ZHrY5oYIZM6njfD_r4QPiuumuLBw5yyzHiDiWLW-6lTg9vIV77jeWCCs_FppNDVANX1WbTQuRszKVqj-FwM3UlVwPGuUr8p_ki7zXH0g'\n      var BASE_URL = 'http://localhost:8002/api/v1'\n      var ENDPOINT = 'question-categories'\n      await axios\n        .create({\n          baseURL: BASE_URL,\n          headers: {\n            Accept: 'application/json',\n            Authorization: 'Bearer ' + token,\n          },\n        })\n        .get(ENDPOINT)\n        .then((res) => {\n          console.log(res)\n          this.category = res.data.question_categories\n        })\n    },\n    addNew() {\n      let no = this.option_no + 1\n      this.option_no = no\n      let obj = {\n        no: this.option_no,\n        checkbox_radio: this.option_no,\n        com: this.option_no,\n        model: 'option_text_' + this.option_no,\n      }\n      this.mul_obj.push(obj)\n      this.option_text.push(null)\n    },\n    delOption() {\n      if (this.mul_obj.length > 1) {\n        this.mul_obj.pop()\n        let no = this.option_no - 1\n        this.option_no = no\n        console.log(this.option_no)\n      }\n    },\n    type() {\n      this.question_type = this.$refs.question_type.value\n      if (this.$refs.question_type.value == 'checkbox') {\n        this.multiple_ans = true\n        this.single_ans = false\n        this.true_false = false\n      } else if (this.$refs.question_type.value == 'radio') {\n        this.multiple_ans = false\n        this.single_ans = true\n        this.true_false = false\n      } else {\n        this.multiple_ans = false\n        this.single_ans = false\n        this.true_false = true\n      }\n    },\n    addQuestion() {\n      let question_type = this.question_type\n\n      if (question_type == 'checkbox') {\n        let serial_no = ''\n        for (let i = 1; i <= this.mul_obj.length; i++) {\n          if (i == 1) {\n            serial_no = serial_no + '' + i\n          } else {\n            serial_no = serial_no + '|' + i\n          }\n        }\n\n        console.log(serial_no)\n        let data = {\n          question_type: this.question_type,\n          question_text: this.question_type,\n          option_type: this.question_type,\n          profile_id: 1,\n          category_id: 0,\n          privacy: 0,\n          publish_status: 0,\n          no_of_option: this.option_no,\n          no_of_used: 0,\n          no_of_comments: 0,\n          average_rating: 0,\n          no_of_answer: this.checkbox_num.length,\n          active: 0,\n          serial_no: serial_no,\n          option: this.option_text.join('|'),\n          description: this.question,\n          img: 'img',\n          answer: this.checkbox_num.join(','),\n          reference: 0,\n          tags: this.question_tag.join(','),\n        }\n      }\n    },\n\n    handleImageAdded: function (file, Editor, cursorLocation, resetUploader) {\n      var formData = new FormData()\n      formData.append('image', file)\n\n      axios({\n        url: `${base_url}/upload`,\n        method: 'POST',\n        data: formData,\n      })\n        .then((result) => {\n          console.log(result)\n          const base_url = result.data.base_url // Get url from response\n          const image_url = result.data.img_url\n          const url = base_url + '/' + image_url\n          Editor.insertEmbed(cursorLocation, 'image', url)\n          resetUploader()\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n    },\n  },\n}\n</script>\n\n<style src=\"@vueform/multiselect/themes/default.css\"></style>\n"]},"metadata":{},"sourceType":"module"}