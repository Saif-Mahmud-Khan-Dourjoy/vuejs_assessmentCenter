{"ast":null,"code":"import { CChart } from '@coreui/vue-chartjs';\nimport { getStyle, hexToRgba } from '@coreui/utils/src';\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport default {\n  name: 'MainChartExample',\n  components: {\n    CChart\n  },\n\n  setup() {\n    const data = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n        borderColor: getStyle('--cui-info'),\n        pointHoverBackgroundColor: getStyle('--cui-info'),\n        borderWidth: 2,\n        data: [random(50, 200), random(50, 200), random(50, 200), random(50, 200), random(50, 200), random(50, 200), random(50, 200)],\n        fill: true\n      }, {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: getStyle('--cui-success'),\n        pointHoverBackgroundColor: getStyle('--cui-success'),\n        borderWidth: 2,\n        data: [random(50, 200), random(50, 200), random(50, 200), random(50, 200), random(50, 200), random(50, 200), random(50, 200)]\n      }, {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: getStyle('--cui-danger'),\n        pointHoverBackgroundColor: getStyle('--cui-danger'),\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: [65, 65, 65, 65, 65, 65, 65]\n      }]\n    };\n    const options = {\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false\n        }\n      },\n      scales: {\n        x: {\n          grid: {\n            drawOnChartArea: false\n          }\n        },\n        y: {\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 250\n          }\n        }\n      },\n      elements: {\n        line: {\n          tension: 0.4\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3\n        }\n      }\n    };\n    return {\n      data,\n      options\n    };\n  },\n\n  methods: {\n    aa(value, value2) {\n      console.log(value);\n      console.log(value2);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAYA,SAASA,MAAT,QAAuB,qBAAvB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,mBAApC;;AAEA,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0B;EACxB,OAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACH,MAAL,MAAiBE,GAAE,GAAID,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACF;;AAEA,eAAe;EACbI,IAAI,EAAE,kBADO;EAEbC,UAAU,EAAE;IACVT;EADU,CAFC;;EAKbU,KAAK,GAAG;IACN,MAAMC,IAAG,GAAI;MACXC,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,CADG;MAEXC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,kBADT;QAEEC,eAAe,EAAEb,SAAS,CAACD,QAAQ,CAAC,YAAD,CAAT,EAAyB,EAAzB,CAF5B;QAGEe,WAAW,EAAEf,QAAQ,CAAC,YAAD,CAHvB;QAIEgB,yBAAyB,EAAEhB,QAAQ,CAAC,YAAD,CAJrC;QAKEiB,WAAW,EAAE,CALf;QAMEP,IAAI,EAAE,CACJR,MAAM,CAAC,EAAD,EAAK,GAAL,CADF,EAEJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAFF,EAGJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAHF,EAIJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAJF,EAKJA,MAAM,CAAC,EAAD,EAAK,GAAL,CALF,EAMJA,MAAM,CAAC,EAAD,EAAK,GAAL,CANF,EAOJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAPF,CANR;QAeEgB,IAAI,EAAE;MAfR,CADQ,EAkBR;QACEL,KAAK,EAAE,mBADT;QAEEC,eAAe,EAAE,aAFnB;QAGEC,WAAW,EAAEf,QAAQ,CAAC,eAAD,CAHvB;QAIEgB,yBAAyB,EAAEhB,QAAQ,CAAC,eAAD,CAJrC;QAKEiB,WAAW,EAAE,CALf;QAMEP,IAAI,EAAE,CACJR,MAAM,CAAC,EAAD,EAAK,GAAL,CADF,EAEJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAFF,EAGJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAHF,EAIJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAJF,EAKJA,MAAM,CAAC,EAAD,EAAK,GAAL,CALF,EAMJA,MAAM,CAAC,EAAD,EAAK,GAAL,CANF,EAOJA,MAAM,CAAC,EAAD,EAAK,GAAL,CAPF;MANR,CAlBQ,EAkCR;QACEW,KAAK,EAAE,kBADT;QAEEC,eAAe,EAAE,aAFnB;QAGEC,WAAW,EAAEf,QAAQ,CAAC,cAAD,CAHvB;QAIEgB,yBAAyB,EAAEhB,QAAQ,CAAC,cAAD,CAJrC;QAKEiB,WAAW,EAAE,CALf;QAMEE,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CANd;QAOET,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB;MAPR,CAlCQ;IAFC,CAAb;IAgDA,MAAMU,OAAM,GAAI;MACdC,mBAAmB,EAAE,KADP;MAEdC,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,OAAO,EAAE;QADH;MADD,CAFK;MAOdC,MAAM,EAAE;QACNC,CAAC,EAAE;UACDC,IAAI,EAAE;YACJC,eAAe,EAAE;UADb;QADL,CADG;QAMNC,CAAC,EAAE;UACDC,KAAK,EAAE;YACLC,WAAW,EAAE,IADR;YAELC,aAAa,EAAE,CAFV;YAGLC,QAAQ,EAAE5B,IAAI,CAAC6B,IAAL,CAAU,MAAM,CAAhB,CAHL;YAIL9B,GAAG,EAAE;UAJA;QADN;MANG,CAPM;MAsBd+B,QAAQ,EAAE;QACRC,IAAI,EAAE;UACJC,OAAO,EAAE;QADL,CADE;QAIRC,KAAK,EAAE;UACLC,MAAM,EAAE,CADH;UAELC,SAAS,EAAE,EAFN;UAGLC,WAAW,EAAE,CAHR;UAILC,gBAAgB,EAAE;QAJb;MAJC;IAtBI,CAAhB;IAmCA,OAAO;MACLhC,IADK;MAELU;IAFK,CAAP;EAID,CA7FY;;EA8FbuB,OAAO,EAAE;IACPC,EAAE,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAChBC,OAAO,CAACC,GAAR,CAAYH,KAAZ;MACAE,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACD;;EAJM;AA9FI,CAAf","names":["CChart","getStyle","hexToRgba","random","min","max","Math","floor","name","components","setup","data","labels","datasets","label","backgroundColor","borderColor","pointHoverBackgroundColor","borderWidth","fill","borderDash","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","drawOnChartArea","y","ticks","beginAtZero","maxTicksLimit","stepSize","ceil","elements","line","tension","point","radius","hitRadius","hoverRadius","hoverBorderWidth","methods","aa","value","value2","console","log"],"sourceRoot":"","sources":["E:\\assessmentCenter\\ac-frontend-reactjs\\src\\views\\charts\\MainChartExample.vue"],"sourcesContent":["<template>\n  <CChart\n    type=\"line\"\n    :data=\"data\"\n    :options=\"options\"\n    @get-dataset-at-event=\"aa\"\n    @get-element-at-event=\"aa\"\n    @get-elements-at-event=\"aa\"\n  />\n</template>\n\n<script>\nimport { CChart } from '@coreui/vue-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils/src'\n\nfunction random(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n\nexport default {\n  name: 'MainChartExample',\n  components: {\n    CChart,\n  },\n  setup() {\n    const data = {\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n      datasets: [\n        {\n          label: 'My First dataset',\n          backgroundColor: hexToRgba(getStyle('--cui-info'), 10),\n          borderColor: getStyle('--cui-info'),\n          pointHoverBackgroundColor: getStyle('--cui-info'),\n          borderWidth: 2,\n          data: [\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n          ],\n          fill: true,\n        },\n        {\n          label: 'My Second dataset',\n          backgroundColor: 'transparent',\n          borderColor: getStyle('--cui-success'),\n          pointHoverBackgroundColor: getStyle('--cui-success'),\n          borderWidth: 2,\n          data: [\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n            random(50, 200),\n          ],\n        },\n        {\n          label: 'My Third dataset',\n          backgroundColor: 'transparent',\n          borderColor: getStyle('--cui-danger'),\n          pointHoverBackgroundColor: getStyle('--cui-danger'),\n          borderWidth: 1,\n          borderDash: [8, 5],\n          data: [65, 65, 65, 65, 65, 65, 65],\n        },\n      ],\n    }\n\n    const options = {\n      maintainAspectRatio: false,\n      plugins: {\n        legend: {\n          display: false,\n        },\n      },\n      scales: {\n        x: {\n          grid: {\n            drawOnChartArea: false,\n          },\n        },\n        y: {\n          ticks: {\n            beginAtZero: true,\n            maxTicksLimit: 5,\n            stepSize: Math.ceil(250 / 5),\n            max: 250,\n          },\n        },\n      },\n      elements: {\n        line: {\n          tension: 0.4,\n        },\n        point: {\n          radius: 0,\n          hitRadius: 10,\n          hoverRadius: 4,\n          hoverBorderWidth: 3,\n        },\n      },\n    }\n\n    return {\n      data,\n      options,\n    }\n  },\n  methods: {\n    aa(value, value2) {\n      console.log(value)\n      console.log(value2)\n    },\n  },\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}